name: build, test & publish
on: 
    release:
        types: [published]
jobs:
  build-windows:
    name: build release and debug for windows
    runs-on: windows-latest
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: build debug
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1 
      run: |
        dotnet build src/Exomia.Network --configuration Windows-Debug --force --nologo -p:Platform=AnyCPU
        dotnet build src/Exomia.Network --configuration Windows-Debug --force --nologo -p:Platform=x86
        dotnet build src/Exomia.Network --configuration Windows-Debug --force --nologo -p:Platform=x64
    - name: build release
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1 
      run: |
        dotnet build src/Exomia.Network --configuration Windows-Release --force --nologo -p:Platform=AnyCPU
        dotnet build src/Exomia.Network --configuration Windows-Release --force --nologo -p:Platform=x86
        dotnet build src/Exomia.Network --configuration Windows-Release --force --nologo -p:Platform=x64
  test-windows:    
    name: test release and debug for windows
    needs: [build-windows]
    runs-on: windows-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: test debug
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet test tests/L0/Exomia.Network.Tests --configuration Windows-Debug --nologo -p:Platform=AnyCPU
        dotnet test tests/L0/Exomia.Network.Tests --configuration Windows-Debug --nologo -p:Platform=x86
        dotnet test tests/L0/Exomia.Network.Tests --configuration Windows-Debug --nologo -p:Platform=x64
    - name: test release
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet test tests/L0/Exomia.Network.Tests --configuration Windows-Release --nologo -p:Platform=AnyCPU
        dotnet test tests/L0/Exomia.Network.Tests --configuration Windows-Release --nologo -p:Platform=x86
        dotnet test tests/L0/Exomia.Network.Tests --configuration Windows-Release --nologo -p:Platform=x64    
  publish-nuget-windows:
    name: publish release for windows on nuget
    needs: [test-windows]
    if: ${{ github.event_name == 'release' }}
    runs-on: windows-latest
    steps:    
    - uses: actions/checkout@v2
    - name: extract tag version
      run: echo ::set-env name=TAG_VERSION::${GITHUB_REF#refs/tags/v*}
      shell: bash
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: publish ${{ github.repository }} [v${{ env.TAG_VERSION }}]
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet pack src/Exomia.Network --configuration Windows-Release --verbosity m --force --nologo -p:Platform=AnyCPU -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Windows-Release --verbosity m --force --nologo -p:Platform=x86 -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Windows-Release --verbosity m --force --nologo -p:Platform=x64 -p:Version=$TAG_VERSION
        dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.EXOMIA_NUGET_API_KEY_PUSH }} --skip-duplicate
      shell: bash
  publish-github-windows:
    name: publish debug for windows on github
    needs: [test-windows]
    if: ${{ github.event_name == 'release' }}
    runs-on: windows-latest
    steps:    
    - uses: actions/checkout@v2
    - name: extract tag version
      run: echo ::set-env name=TAG_VERSION::${GITHUB_REF#refs/tags/v*}
      shell: bash
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: publish ${{ github.repository }} [v${{ env.TAG_VERSION }}]
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet pack src/Exomia.Network --configuration Windows-Debug --verbosity m --force --nologo -p:Platform=AnyCPU -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Windows-Debug --verbosity m --force --nologo -p:Platform=x86 -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Windows-Debug --verbosity m --force --nologo -p:Platform=x64 -p:Version=$TAG_VERSION
        dotnet nuget push **/*.nupkg --source https://nuget.pkg.github.com/exomia/index.json --api-key ${{ github.token }} --skip-duplicate --no-symbols true
      shell: bash
  build-linux:
    name: build release and debug for linux
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: build debug
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1 
      run: |
        dotnet build src/Exomia.Network --configuration Linux-Debug --force --nologo -p:Platform=AnyCPU
        dotnet build src/Exomia.Network --configuration Linux-Debug --force --nologo -p:Platform=x86
        dotnet build src/Exomia.Network --configuration Linux-Debug --force --nologo -p:Platform=x64
    - name: build release
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1 
      run: |
        dotnet build src/Exomia.Network --configuration Linux-Release --force --nologo -p:Platform=AnyCPU
        dotnet build src/Exomia.Network --configuration Linux-Release --force --nologo -p:Platform=x86
        dotnet build src/Exomia.Network --configuration Linux-Release --force --nologo -p:Platform=x64
  test-linux:    
    name: test release and debug for linux
    needs: [build-linux]
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: test debug
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet test tests/L0/Exomia.Network.Tests --configuration Linux-Debug --nologo -p:Platform=AnyCPU
        dotnet test tests/L0/Exomia.Network.Tests --configuration Linux-Debug --nologo -p:Platform=x86
        dotnet test tests/L0/Exomia.Network.Tests --configuration Linux-Debug --nologo -p:Platform=x64
    - name: test release
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet test tests/L0/Exomia.Network.Tests --configuration Linux-Release --nologo -p:Platform=AnyCPU
        dotnet test tests/L0/Exomia.Network.Tests --configuration Linux-Release --nologo -p:Platform=x86
        dotnet test tests/L0/Exomia.Network.Tests --configuration Linux-Release --nologo -p:Platform=x64
  publish-nuget-linux:
    name: publish release for linux on nuget
    needs: [test-linux]
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    - name: extract tag version
      run: echo ::set-env name=TAG_VERSION::${GITHUB_REF#refs/tags/v*}
      shell: bash
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: publish ${{ github.repository }} [v${{ env.TAG_VERSION }}]
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet pack src/Exomia.Network --configuration Linux-Release --verbosity m --force --nologo -p:Platform=AnyCPU -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Linux-Release --verbosity m --force --nologo -p:Platform=x86 -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Linux-Release --verbosity m --force --nologo -p:Platform=x64 -p:Version=$TAG_VERSION
        dotnet nuget push **/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.EXOMIA_NUGET_API_KEY_PUSH }} --skip-duplicate
      shell: bash
  publish-github-linux:
    name: publish debug for linux on github
    needs: [test-linux]
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    - name: extract tag version
      run: echo ::set-env name=TAG_VERSION::${GITHUB_REF#refs/tags/v*}
      shell: bash
    - uses: actions/setup-dotnet@v1   
      with:
        dotnet-version: 3.1.300
    - name: publish ${{ github.repository }} [v${{ env.TAG_VERSION }}]
      env:
        DOTNET_NOLOGO: 1
        DOTNET_CLI_TELEMETRY_OPTOUT: 1
      run: |
        dotnet pack src/Exomia.Network --configuration Linux-Debug --verbosity m --force --nologo -p:Platform=AnyCPU -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Linux-Debug --verbosity m --force --nologo -p:Platform=x86 -p:Version=$TAG_VERSION
        dotnet pack src/Exomia.Network --configuration Linux-Debug --verbosity m --force --nologo -p:Platform=x64 -p:Version=$TAG_VERSION
        dotnet nuget push **/*.nupkg --source https://nuget.pkg.github.com/exomia/index.json --api-key ${{ github.token }} --skip-duplicate --no-symbols true
      shell: bash
